// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM616.hdl

/**
 * Memory of 616 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[6..8], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    RAM64(in=in, load=a, address=address[0..5], out=tempa);
    RAM64(in=in, load=b, address=address[0..5], out=tempb);
    RAM64(in=in, load=c, address=address[0..5], out=tempc);
    RAM64(in=in, load=d, address=address[0..5], out=tempd);
    RAM64(in=in, load=e, address=address[0..5], out=tempe);
    RAM64(in=in, load=f, address=address[0..5], out=tempf);
    RAM64(in=in, load=g, address=address[0..5], out=tempg);
    RAM64(in=in, load=h, address=address[0..5], out=temph);
    // Extracting output from register which load bit was mapped to
    Mux8Way16(a=tempa, b=tempb, c=tempc, d=tempd, e=tempe, f=tempf, g=tempg, h=temph, sel=address[6..8], out=out);
}
